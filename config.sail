register enable_print_at_interval : bool = false
register enable_print_dump        : bool = true
register enable_break_at_trap     : bool = false
register enable_print_mem         : bool = false
val print_memory : (unit) -> unit
function print_memory() = {
print_endline("");
}

val load_config : (unit) -> unit
function load_config() = {
reg_SR[all] = 0x06;
reg_SP = 0xff;
write(0x0200, 0x85);
write(0x0201, 0x42);
write(0x0202, 0xa2);
write(0x0203, 0x10);
write(0x0204, 0x95);
write(0x0205, 0x32);
write(0x0206, 0x8d);
write(0x0207, 0x42);
write(0x0208, 0x00);
write(0x0209, 0xa2);
write(0x020a, 0x10);
write(0x020b, 0x9d);
write(0x020c, 0x32);
write(0x020d, 0x00);
write(0x020e, 0x9d);
write(0x020f, 0xf0);
write(0x0210, 0x00);
write(0x0211, 0xa0);
write(0x0212, 0x10);
write(0x0213, 0x99);
write(0x0214, 0x32);
write(0x0215, 0x00);
write(0x0216, 0x99);
write(0x0217, 0xf0);
write(0x0218, 0x00);
write(0x0219, 0xa9);
write(0x021a, 0x00);
write(0x021b, 0x85);
write(0x021c, 0x42);
write(0x021d, 0xa9);
write(0x021e, 0x01);
write(0x021f, 0x85);
write(0x0220, 0x43);
write(0x0221, 0xa2);
write(0x0222, 0x10);
write(0x0223, 0x81);
write(0x0224, 0x32);
write(0x0225, 0xa9);
write(0x0226, 0xf0);
write(0x0227, 0x85);
write(0x0228, 0x32);
write(0x0229, 0xa9);
write(0x022a, 0x00);
write(0x022b, 0x85);
write(0x022c, 0x33);
write(0x022d, 0xa0);
write(0x022e, 0x0f);
write(0x022f, 0x91);
write(0x0230, 0x32);
write(0x0231, 0xa0);
write(0x0232, 0x10);
write(0x0233, 0x91);
write(0x0234, 0x32);
reg_PC = 0x0200;
}